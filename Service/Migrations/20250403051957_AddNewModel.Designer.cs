// <auto-generated />
using System;
using DynamicPasswordPolicy.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Service.Migrations
{
    [DbContext(typeof(AppDatabaseEntity))]
    [Migration("20250403051957_AddNewModel")]
    partial class AddNewModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.Models.PasswordHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PasswordChangedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("PasswordHistories");
                });

            modelBuilder.Entity("Model.Models.PasswordPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsLowerLetter")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNumber")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpecialChar")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUpperLetter")
                        .HasColumnType("bit");

                    b.Property<int>("PasswordAttemptCount")
                        .HasColumnType("int");

                    b.Property<int>("PasswordExpiredInDays")
                        .HasColumnType("int");

                    b.Property<int>("PasswordLegth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("_passwordPolicies");
                });

            modelBuilder.Entity("Model.Models.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FailedAttempts")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.ToTable("_user");
                });
#pragma warning restore 612, 618
        }
    }
}
